plugins {
    id "org.dm.bundle" version "0.8.5"
}

apply plugin: 'java'

description = 'Daikon main shared library'

dependencies {
    compile group: 'org.apache.avro', name: 'avro', version: '1.8.0'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.12'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.5.3'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.5.3'
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
    compile group: 'commons-codec', name: 'commons-codec', version: '1.6'
    compile group: 'com.cedarsoftware', name: 'json-io', version: '4.4.1-SNAPSHOT'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    testCompile group: 'org.skyscreamer', name: 'jsonassert', version: '1.2.3'
}

jar {
    manifest {
        name "${project.getName()} Library"
        symbolicName 'org.talend.daikon.lib'
        instruction 'Dynamic-ImportPackage', '*'
    }
}

OsgiPluginConvention conv = getConvention().getPlugins().get('osgi')

task bundleJar(type: Jar) {
    from sourceSets.main.output
    classifier 'bundle'

    // FIXME - have to inject the osgi plugin here because this task is not the standard jar task
    setManifest conv.osgiManifest {
        setClassesDir sourceSets.main.output.classesDir
        setClasspath configurations.getByName("runtime");

        name "${project.getName()} Bundle"
        symbolicName 'org.talend.daikon'
        instruction 'Dynamic-ImportPackage', '*'
        instruction 'Service-Component', '*'
        instruction 'Embed-Transitive', 'true'
        instruction 'Embed-Dependency', '*;artifactId=paranamer|snappy-java|commons-compress|xz;inline=true'
    }
}

task testJar(type: Jar) {
    from sourceSets.test.output
    classifier 'tests'

    // FIXME - have to inject the osgi plugin here because this task is not the standard jar task
    setManifest conv.osgiManifest {
        setClassesDir sourceSets.test.output.classesDir
        setClasspath configurations.getByName("runtime");

        name "${project.getName()} Tests2"
        symbolicName 'org.talend.daikon.test'
        instruction 'Dynamic-ImportPackage', '*'

        //instruction 'Import-Package', 'org.talend*,org.junit*,org.hamcrest*'
        instruction 'Conditional-Package', 'org.hamcrest.*'
        instruction 'Fragment-Host', 'org.talend.daikon'
        instruction 'Embed-Transitive', 'true'
        instruction 'Embed-Dependency', '*;scope=test;artifactId=!hamcrest-core|junit'
        //instruction 'Bundle-ClassPath', '.,{maven-dependencies}'
        //instruction 'Export-Package', 'org.talend.daikon*'
    }
}

jar.dependsOn bundleJar, testJar
